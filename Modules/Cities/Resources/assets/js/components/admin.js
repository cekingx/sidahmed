
if(window.authenticated) {
	window.showTemplateModal = function() {
		$("#template_modal").modal('show');
	}

	$(function(){

		// Init pre-defined template
		if(typeof editor.settings.templateData !== undefined && editor.settings.templateData.length) {
			$("#template_form_id").val(editor.settings.templateData.id);
			$("#template_form_name").val(editor.settings.templateData.name);
			$("#template_form_listing_id").val(editor.settings.templateData.listing_id);
			updateTemplateName(editor.settings.templateData.name);
		}
	})

	$("#template_form").submit(function(e) {

		$("#loading").show();
		e.preventDefault();

		// Scroll to top
		window.scrollTo(0, 0);

		// Set the canvas size to the selected size @ 300 DPI
		editor.methods.setCanvasSize(210, 297);

		let ran = false,
			process = function() {
				if(ran !== false) return; 

				ran = true;
				// Make the canvas CSS print ready
				$("#canvas-frame").addClass('print');
				$("#canvas-frame").parent().removeClass('canvas');

				// Convert the canvas to image and append it
				let canvasElement 	= editor.map.getCanvas(), // Find the canvas generated by MapBox
					img 			= $(`<img style="width:100%; height:auto">`); // Create the image wrapper


				img.attr('src', canvasElement.toDataURL('image/png',1.0));

				// Append the image
				$("#canvas-map").css('display', 'none');

				// On image load, keep running the process
				img.one('load', function() {

					// Convert the HTML to canvas and append it to a PDF file
					html2canvas($("#canvas-frame").get(0), {imageTimeout: 0, allowTaint: true}).then(function(canvas) {

						e.preventDefault();
						// Get bounding box
						let map = editor.map,
							mapCanvas = map.getCanvas(),
							w = mapCanvas.width,
							h = mapCanvas.height,
							cUL = map.unproject([0,0]).toArray(),
							cLR = map.unproject([w,h]).toArray();

						editor.settings.bounds = [cUL, cLR];
						
						$("#template_form_settings").val(JSON.stringify(editor.settings));
						$("#template_form_preview").val(canvas.toDataURL('image/png', 1.0));
						let data = $("#template_form").serialize();

		                $.ajax({
		                	url: siteUrl + 'admin/templates/store',
		                	type:"POST",
		                	data:data,

		                	success: function(e) {
		                		$("#template_form_id").val(e.id);
								$("#template_create_new").show();
								updateTemplateName(e.name);
								$("#loading").hide();
		                	}
		                })

		                // Reset UI
		                $("#canvas-map").css('display', 'block')
				        img.remove();
				        
				        editor.methods.resetCanvasSize();
				        if(md.mobile() == null) {
							editor.methods.setCanvasFitScreen();
							$(window).resize(function(){
								if(!$("body").hasClass('print')) {
									editor.methods.setCanvasFitScreen();
								}
							})
						}
						editor.methods.updateAll();

				        $("#canvas-frame").removeClass('print'); // Print Ready
				        $("#canvas-frame").parent().addClass('canvas');
					});
				}).each(function(){
					if(this.complete) {
						$(this).load();
					}
				});

				$("#canvas-map-wrapper").append(img);
			};

		let interval = setInterval(function(){
			if(editor.map.loaded() === true) {
				process();
				window.clearInterval(interval);
			}
		}, 1500);
	});

	$("#template_create_new").click(function(){
		$(this).hide();

		$("#template_form").find('input').val('');
		updateTemplateName('New Template');
	})

	function updateTemplateName(name) {
		$(".template_name").text(name);
	}
}